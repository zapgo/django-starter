db_data:
  image: postgres
  command: echo "DB data volume!"
  volumes:
    - /var/lib/postgresql/data

postgres:
  image: postgres
#  volumes_from:
#    - db_data
  env_file:
    - ${PWD}/.env

redis:
  image: redis

rabbitmq:
  image: rabbitmq:3-management
  ports:
    - "5672:5672"
    - "15672:15672"
  env_file:
    - ${PWD}/.env

webapp:
  image: ${IMAGE_NAME}
#  build: ${PWD}
#  ports:
#    - "8000:8000"
#  command: /docker-entrypoint.sh gunicorn
#  links:
#    - postgres:db
#    - rabbitmq:rabbit-node
#    - redis:redis
  user: webapp
  volumes:
    - ${PWD}/src:/app
    - /srv/apps/default/src:/app
  env_file: ${PWD}/.env
  log_opt:
    max-size: "500k"
    max-file: "2"

nginx-proxy:
  image: jwilder/nginx-proxy
  ports:
    - 80:80
    - 443:443
  volumes:
    - /srv/htdocs:/var/www:ro
    - /srv/certs:/etc/nginx/certs:ro
    - /srv/config/:/etc/nginx/vhost.d:ro
    - /var/run/docker.sock:/tmp/docker.sock:ro
    - /usr/share/nginx/html


letsencrypt-plugin:
  image: jrcs/letsencrypt-nginx-proxy-companion
  volumes_from:
    - nginx-proxy
  volumes:
    - /srv/config:/etc/nginx/vhost.d:rw
    - /srv/certs:/etc/nginx/certs:rw
    - /var/run/docker.sock:/var/run/docker.sock:ro

#webapp:
#  extends:
#    service: webapp
#  command: bash -c "gunicorn config.wsgi:application --config file:config/gunicorn.py"
#  env:
#    - VIRTUAL_HOST="www.obitec.co,obitec.co"
#    - LETSENCRYPT_HOST="www.obitec.co,obitec.co"
#    - LETSENCRYPT_EMAIL="obitec@outlook.com"
#  ports:
#    - 8000:8000


bind:
  image: ab77/bind
  container_name: bind
  ports:
    - "53:53/udp"
  volumes:
    - /opt/netflix-proxy/data:/data
  net: host
  restart: always


sniproxy:
  image: ab77/sniproxy
  container_name: sniproxy
  net: host
  ports:
    - "80:80"
    - "443:443"
  volumes:
    - /opt/netflix-proxy/data:/data
  restart: always
