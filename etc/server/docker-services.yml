wheel-factory:
  image: kmaginary/factory
  volumes:
    - /srv/build/wheelhouse:/wheelhouse
    - /srv/build/requirements.txt:/app/requirements.txt
  command: bash -c "while read p; do /env/bin/pip wheel $$p; done < requirements.txt"


nginx-proxy:
  image: jwilder/nginx-proxy
  ports:
    - 80:80
    - 443:443
  volumes:
    - /srv/htdocs:/var/www:ro
    - /srv/certs:/etc/nginx/certs:ro
    - /srv/config/:/etc/nginx/vhost.d:ro
    - /var/run/docker.sock:/tmp/docker.sock:ro
    - /usr/share/nginx/html


letsencrypt-plugin:
  image: jrcs/letsencrypt-nginx-proxy-companion
  volumes_from:
    - nginx-proxy
  volumes:
    - /srv/config:/etc/nginx/vhost.d:rw
    - /srv/certs:/etc/nginx/certs:rw
    - /var/run/docker.sock:/var/run/docker.sock:ro


#webapp:
#  extends:
#    service: webapp
#  command: bash -c "gunicorn config.wsgi:application --config file:config/gunicorn.py"
#  env:
#    - VIRTUAL_HOST="example.com"
#    - LETSENCRYPT_HOST="example.com"
#    - LETSENCRYPT_EMAIL="example@gmail.com"
#  ports:
#    - 8000:8000


bind:
  image: ab77/bind
  container_name: bind
  ports:
    - "53:53/udp"
  volumes:
    - /opt/smartproxy/data:/data
  net: host
  restart: always


sniproxy:
  image: ab77/sniproxy
  container_name: sniproxy
  net: host
  ports:
    - "80:80"
    - "443:443"
  volumes:
    - /opt/smartproxy/data:/data
  restart: always


get-certificate:
  image: quay.io/letsencrypt/letsencrypt:latest
  volumes:
    - /etc/letsencrypt:/etc/letsencrypt
    - /var/lib/letsencrypt:/var/lib/letsencrypt
  ports:
    - 80:80
    - 443:443
  command: auth
