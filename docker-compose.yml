webapp:
  extends:
    service: webapp
    file: ./etc/docker-services.yml
  command: bash -c "gunicorn config.wsgi:application --config file:config/gunicorn.py"
  links:
    - postgres
  ports:
    - 8010:8000

task_scheduler:
  extends:
     service: webapp
     file: ./etc/docker-services.yml
  command: bash -c "celery -A config.celery worker --beat --loglevel=INFO --concurrency=1 -Q dummy-queue"
  links:
    - redis
    - rabbitmq

worker_default:
  extends:
     service: webapp
     file: ./etc/docker-services.yml
  command: bash -c "celery -A config.celery worker --loglevel=DEBUG --concurrency=1 -Q task_queue"
  links:
    - postgres
    - redis
    - rabbitmq

worker_test_queue:
  extends:
     service: webapp
     file: ./etc/docker-services.yml
  command: bash -c "celery -A config.celery worker --loglevel=DEBUG --concurrency=1 -Q test_queue"
  links:
    - postgres
    - redis
    - rabbitmq

#django:
#  extends:
#     service: webapp
#     file: ./etc/docker-services.
#  command: bash -c "python manage.py django_server"

postgres:
  image: postgres
  volumes_from:
    - db_data
  ports:
    - '5432:5432'
  env_file:
    - ${PWD}/.env

db_data:
  image: postgres
  command: echo "DB data volume!"
  volumes:
    - /var/lib/postgresql/data

redis:
  extends:
    service: redis
    file: ./etc/docker-services.yml

rabbitmq:
  extends:
    service: rabbitmq
    file: ./etc/docker-services.yml
